Terminals unused in grammar

    BREAK
    CONTINUE
    NEWLINE
    WRITE
    WRITELN
    READ
    COMMENT
    END_OF_FILE


State 54 conflicts: 1 shift/reduce
State 111 conflicts: 2 shift/reduce
State 146 conflicts: 1 shift/reduce
State 185 conflicts: 1 shift/reduce
State 223 conflicts: 1 shift/reduce
State 235 conflicts: 1 shift/reduce
State 240 conflicts: 1 shift/reduce
State 252 conflicts: 2 shift/reduce
State 297 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: PROGRAM ID ';' $@1 block

    3 $@2: %empty

    4 program: error ID ';' $@2 block

    5 block: procedure_function_decl_part var_decl_part statement_part
    6      | error var_decl_part statement_part

    7 block_: procedure_function_decl_part var_decl_part statement_part_
    8       | error var_decl_part statement_part_

    9 procedure_function_decl_part: %empty
   10                             | procedure_function_decl_part procedure_or_function ';'

   11 procedure_or_function: procedure_decl
   12                      | function_decl

   13 procedure_decl: procedure_header block_

   14 procedure_header: procedure_header_common ';'

   15 $@3: %empty

   16 $@4: %empty

   17 procedure_header: procedure_header_common '(' $@3 formal_parameter_section_list ')' $@4 ';'

   18 $@5: %empty

   19 procedure_header_common: PROCEDURE $@5 ID

   20 formal_parameter_section_list: formal_parameter_section formal_parameter_section_rept

   21 formal_parameter_section_rept: %empty

   22 $@6: %empty

   23 formal_parameter_section_rept: formal_parameter_section_rept ';' $@6 formal_parameter_section

   24 formal_parameter_section: parameter_group

   25 $@7: %empty

   26 formal_parameter_section: VAR $@7 parameter_group

   27 $@8: %empty

   28 parameter_group: ID_list ':' $@8 parameter_type

   29 parameter_type: type_identifier
   30               | structured_type

   31 return_type: type_identifier
   32            | structured_type

   33 function_decl: function_header block_

   34 $@9: %empty

   35 $@10: %empty

   36 $@11: %empty

   37 function_header: FUNCTION ID $@9 ':' $@10 return_type $@11 ';'

   38 $@12: %empty

   39 $@13: %empty

   40 $@14: %empty

   41 $@15: %empty

   42 $@16: %empty

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list ')' $@14 ':' $@15 return_type $@16 ';'

   44 var_decl_part: %empty

   45 $@17: %empty

   46 var_decl_part: VAR $@17 var_decl var_decl_rept EOSE

   47 $@18: %empty

   48 var_decl: ID_list ':' $@18 type
   49         | ID_list error type

   50 var_decl_rept: %empty
   51              | var_decl_rept EOSE var_decl

   52 type: simple_type
   53     | structured_type

   54 simple_type: scalar_type
   55            | subrange_type
   56            | type_identifier

   57 $@19: %empty

   58 scalar_type: '(' $@19 ID_list ')'

   59 $@20: %empty

   60 subrange_type: const '.' '.' $@20 const

   61 const: INT
   62      | FLOAT
   63      | ID

   64 type_identifier: TYPE

   65 structured_type: array_type

   66 $@21: %empty

   67 $@22: %empty

   68 $@23: %empty

   69 $@24: %empty

   70 array_type: ARRAY $@21 '[' $@22 index_type index_type_rept ']' $@23 OF $@24 type

   71 index_type: simple_type

   72 index_type_rept: %empty

   73 $@25: %empty

   74 index_type_rept: index_type_rept ',' $@25 simple_type

   75 $@26: %empty

   76 ID_list: ID $@26 ID_list_rept

   77 ID_list_rept: %empty
   78             | ID_list_rept ',' ID

   79 statement_part: first_compound_statement

   80 statement_part_: compound_statement

   81 expression: simple_expression

   82 $@27: %empty

   83 expression: simple_expression RELATIONAL_OP $@27 simple_expression

   84 simple_expression: term

   85 $@28: %empty

   86 simple_expression: simple_expression ADD_OP $@28 term

   87 term: factor

   88 $@29: %empty

   89 term: term MUL_OP $@29 factor

   90 factor: variable

   91 $@30: %empty

   92 factor: '(' $@30 expression ')'

   93 $@31: %empty

   94 factor: LOGICALNOT $@31 factor
   95       | function_designator

   96 variable: entire_variable
   97         | indexed_variable

   98 entire_variable: INT
   99                | FLOAT
  100                | STRING
  101                | ID

  102 $@32: %empty

  103 indexed_variable: variable '[' $@32 expression ']'

  104 function_designator: BUILTIN_FUNCTION

  105 $@33: %empty

  106 $@34: %empty

  107 function_designator: BUILTIN_FUNCTION $@33 '(' $@34 actual_parameter actual_parameter_list ')'

  108 $@35: %empty

  109 $@36: %empty

  110 function_designator: ID $@35 '(' $@36 actual_parameter actual_parameter_list ')'

  111 actual_parameter_list: %empty

  112 $@37: %empty

  113 actual_parameter_list: actual_parameter_list ',' $@37 actual_parameter

  114 actual_parameter: expression

  115 EOSE: ';'

  116 $@38: %empty

  117 $@39: %empty

  118 if_statement: IF $@38 expression THEN $@39 statement else
  119             | error statement else

  120 else: %empty

  121 $@40: %empty

  122 else: ELSE $@40 statement
  123     | error statement

  124 case_statement: CASE expression OF case_list_element case_list_rept END

  125 case_list_rept: %empty
  126               | EOSE case_list_rept

  127 case_list_element: %empty

  128 $@41: %empty

  129 case_list_element: case_label_list ':' $@41 statement

  130 case_label_list: case_label case_label_rept

  131 case_label_rept: %empty

  132 $@42: %empty

  133 case_label_rept: case_label_rept ',' $@42 case_label

  134 case_label: INT
  135           | STRING
  136           | ID

  137 statement: %empty
  138          | structured_statement
  139          | assignment_statement
  140          | procedure_statement

  141 $@43: %empty

  142 assignment_statement: variable ASSIGN $@43 expression
  143                     | variable error expression

  144 structured_statement: compound_statement
  145                     | conditional_statement
  146                     | reptive_statement
  147                     | with_statement

  148 $@44: %empty

  149 $@45: %empty

  150 $@46: %empty

  151 first_compound_statement: _BEGIN $@44 statement rept_statement $@45 END $@46 '.'

  152 $@47: %empty

  153 compound_statement: _BEGIN $@47 statement rept_statement END

  154 conditional_statement: if_statement
  155                      | case_statement

  156 rept_statement: %empty
  157               | rept_statement EOSE statement

  158 reptive_statement: while_stat
  159                  | rept_stat
  160                  | for_stat

  161 $@48: %empty

  162 $@49: %empty

  163 while_stat: WHILE $@48 expression DO $@49 statement

  164 $@50: %empty

  165 $@51: %empty

  166 rept_stat: REPEAT $@50 statement rept_rept_stat UNTIL $@51 expression

  167 rept_rept_stat: %empty
  168               | rept_rept_stat EOSE statement

  169 $@52: %empty

  170 $@53: %empty

  171 $@54: %empty

  172 $@55: %empty

  173 for_stat: FOR $@52 ID $@53 ASSIGN $@54 for_list DO $@55 statement

  174 $@56: %empty

  175 for_list: expression TO $@56 expression

  176 $@57: %empty

  177 for_list: expression DOWNTO $@57 expression

  178 $@58: %empty

  179 $@59: %empty

  180 with_statement: WITH $@58 variable_list DO $@59 statement

  181 variable_list: variable variable_list_rept

  182 variable_list_rept: %empty

  183 $@60: %empty

  184 variable_list_rept: variable_list_rept ',' $@60 variable

  185 procedure_statement: BUILTIN_FUNCTION

  186 $@61: %empty

  187 $@62: %empty

  188 procedure_statement: BUILTIN_FUNCTION $@61 '(' $@62 actual_parameter actual_parameter_list ')'

  189 $@63: %empty

  190 $@64: %empty

  191 procedure_statement: ID $@63 '(' $@64 actual_parameter actual_parameter_list ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 17 43 58 92 107 110 188 191
    ')' (41) 17 43 58 92 107 110 188 191
    ',' (44) 74 78 113 133 184
    '.' (46) 60 151
    ':' (58) 28 37 43 48 129
    ';' (59) 2 4 10 14 17 23 37 43 115
    '[' (91) 70 103
    ']' (93) 70 103
    error (256) 4 6 8 49 119 123 143
    PROGRAM (258) 2
    FUNCTION (259) 37 43
    PROCEDURE (260) 19
    ARRAY (261) 70
    IF (262) 118
    THEN (263) 118
    ELSE (264) 122
    CASE (265) 124
    OF (266) 70 124
    END (267) 124 151 153
    ASSIGN (268) 142 173
    _BEGIN (269) 151 153
    WHILE (270) 163
    DO (271) 163 173 180
    REPEAT (272) 166
    UNTIL (273) 166
    FOR (274) 173
    TO (275) 175
    DOWNTO (276) 177
    BREAK (277)
    CONTINUE (278)
    VAR (279) 26 46
    LOGICALNOT (280) 94
    NEWLINE (281)
    WITH (282) 180
    WRITE (283)
    WRITELN (284)
    READ (285)
    FLOAT <floatVal> (286) 62 99
    INT <intVal> (287) 61 98 134
    STRING <stringVal> (288) 100 135
    ID <stringVal> (289) 2 4 19 37 43 63 76 78 101 110 136 173 191
    RELATIONAL_OP <stringVal> (290) 83
    ADD_OP <stringVal> (291) 86
    MUL_OP <stringVal> (292) 89
    TYPE <stringVal> (293) 64
    BUILTIN_FUNCTION <stringVal> (294) 104 107 185 188
    COMMENT (295)
    END_OF_FILE (296)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 2 4
        on right: 0
    $@1 (52)
        on left: 1
        on right: 2
    $@2 (53)
        on left: 3
        on right: 4
    block (54)
        on left: 5 6
        on right: 2 4
    block_ (55)
        on left: 7 8
        on right: 13 33
    procedure_function_decl_part (56)
        on left: 9 10
        on right: 5 7 10
    procedure_or_function (57)
        on left: 11 12
        on right: 10
    procedure_decl (58)
        on left: 13
        on right: 11
    procedure_header (59)
        on left: 14 17
        on right: 13
    $@3 (60)
        on left: 15
        on right: 17
    $@4 (61)
        on left: 16
        on right: 17
    procedure_header_common (62)
        on left: 19
        on right: 14 17
    $@5 (63)
        on left: 18
        on right: 19
    formal_parameter_section_list (64)
        on left: 20
        on right: 17 43
    formal_parameter_section_rept (65)
        on left: 21 23
        on right: 20 23
    $@6 (66)
        on left: 22
        on right: 23
    formal_parameter_section (67)
        on left: 24 26
        on right: 20 23
    $@7 (68)
        on left: 25
        on right: 26
    parameter_group (69)
        on left: 28
        on right: 24 26
    $@8 (70)
        on left: 27
        on right: 28
    parameter_type (71)
        on left: 29 30
        on right: 28
    return_type (72)
        on left: 31 32
        on right: 37 43
    function_decl (73)
        on left: 33
        on right: 12
    function_header (74)
        on left: 37 43
        on right: 33
    $@9 (75)
        on left: 34
        on right: 37
    $@10 (76)
        on left: 35
        on right: 37
    $@11 (77)
        on left: 36
        on right: 37
    $@12 (78)
        on left: 38
        on right: 43
    $@13 (79)
        on left: 39
        on right: 43
    $@14 (80)
        on left: 40
        on right: 43
    $@15 (81)
        on left: 41
        on right: 43
    $@16 (82)
        on left: 42
        on right: 43
    var_decl_part (83)
        on left: 44 46
        on right: 5 6 7 8
    $@17 (84)
        on left: 45
        on right: 46
    var_decl (85)
        on left: 48 49
        on right: 46 51
    $@18 (86)
        on left: 47
        on right: 48
    var_decl_rept (87)
        on left: 50 51
        on right: 46 51
    type (88)
        on left: 52 53
        on right: 48 49 70
    simple_type (89)
        on left: 54 55 56
        on right: 52 71 74
    scalar_type (90)
        on left: 58
        on right: 54
    $@19 (91)
        on left: 57
        on right: 58
    subrange_type (92)
        on left: 60
        on right: 55
    $@20 (93)
        on left: 59
        on right: 60
    const (94)
        on left: 61 62 63
        on right: 60
    type_identifier (95)
        on left: 64
        on right: 29 31 56
    structured_type (96)
        on left: 65
        on right: 30 32 53
    array_type (97)
        on left: 70
        on right: 65
    $@21 (98)
        on left: 66
        on right: 70
    $@22 (99)
        on left: 67
        on right: 70
    $@23 (100)
        on left: 68
        on right: 70
    $@24 (101)
        on left: 69
        on right: 70
    index_type (102)
        on left: 71
        on right: 70
    index_type_rept (103)
        on left: 72 74
        on right: 70 74
    $@25 (104)
        on left: 73
        on right: 74
    ID_list (105)
        on left: 76
        on right: 28 48 49 58
    $@26 (106)
        on left: 75
        on right: 76
    ID_list_rept (107)
        on left: 77 78
        on right: 76 78
    statement_part (108)
        on left: 79
        on right: 5 6
    statement_part_ (109)
        on left: 80
        on right: 7 8
    expression (110)
        on left: 81 83
        on right: 92 103 114 118 124 142 143 163 166 175 177
    $@27 (111)
        on left: 82
        on right: 83
    simple_expression (112)
        on left: 84 86
        on right: 81 83 86
    $@28 (113)
        on left: 85
        on right: 86
    term (114)
        on left: 87 89
        on right: 84 86 89
    $@29 (115)
        on left: 88
        on right: 89
    factor (116)
        on left: 90 92 94 95
        on right: 87 89 94
    $@30 (117)
        on left: 91
        on right: 92
    $@31 (118)
        on left: 93
        on right: 94
    variable (119)
        on left: 96 97
        on right: 90 103 142 143 181 184
    entire_variable (120)
        on left: 98 99 100 101
        on right: 96
    indexed_variable (121)
        on left: 103
        on right: 97
    $@32 (122)
        on left: 102
        on right: 103
    function_designator (123)
        on left: 104 107 110
        on right: 95
    $@33 (124)
        on left: 105
        on right: 107
    $@34 (125)
        on left: 106
        on right: 107
    $@35 (126)
        on left: 108
        on right: 110
    $@36 (127)
        on left: 109
        on right: 110
    actual_parameter_list (128)
        on left: 111 113
        on right: 107 110 113 188 191
    $@37 (129)
        on left: 112
        on right: 113
    actual_parameter (130)
        on left: 114
        on right: 107 110 113 188 191
    EOSE (131)
        on left: 115
        on right: 46 51 126 157 168
    if_statement (132)
        on left: 118 119
        on right: 154
    $@38 (133)
        on left: 116
        on right: 118
    $@39 (134)
        on left: 117
        on right: 118
    else (135)
        on left: 120 122 123
        on right: 118 119
    $@40 (136)
        on left: 121
        on right: 122
    case_statement (137)
        on left: 124
        on right: 155
    case_list_rept (138)
        on left: 125 126
        on right: 124 126
    case_list_element (139)
        on left: 127 129
        on right: 124
    $@41 (140)
        on left: 128
        on right: 129
    case_label_list (141)
        on left: 130
        on right: 129
    case_label_rept (142)
        on left: 131 133
        on right: 130 133
    $@42 (143)
        on left: 132
        on right: 133
    case_label (144)
        on left: 134 135 136
        on right: 130 133
    statement (145)
        on left: 137 138 139 140
        on right: 118 119 122 123 129 151 153 157 163 166 168 173 180
    assignment_statement (146)
        on left: 142 143
        on right: 139
    $@43 (147)
        on left: 141
        on right: 142
    structured_statement (148)
        on left: 144 145 146 147
        on right: 138
    first_compound_statement (149)
        on left: 151
        on right: 79
    $@44 (150)
        on left: 148
        on right: 151
    $@45 (151)
        on left: 149
        on right: 151
    $@46 (152)
        on left: 150
        on right: 151
    compound_statement (153)
        on left: 153
        on right: 80 144
    $@47 (154)
        on left: 152
        on right: 153
    conditional_statement (155)
        on left: 154 155
        on right: 145
    rept_statement (156)
        on left: 156 157
        on right: 151 153 157
    reptive_statement (157)
        on left: 158 159 160
        on right: 146
    while_stat (158)
        on left: 163
        on right: 158
    $@48 (159)
        on left: 161
        on right: 163
    $@49 (160)
        on left: 162
        on right: 163
    rept_stat (161)
        on left: 166
        on right: 159
    $@50 (162)
        on left: 164
        on right: 166
    $@51 (163)
        on left: 165
        on right: 166
    rept_rept_stat (164)
        on left: 167 168
        on right: 166 168
    for_stat (165)
        on left: 173
        on right: 160
    $@52 (166)
        on left: 169
        on right: 173
    $@53 (167)
        on left: 170
        on right: 173
    $@54 (168)
        on left: 171
        on right: 173
    $@55 (169)
        on left: 172
        on right: 173
    for_list (170)
        on left: 175 177
        on right: 173
    $@56 (171)
        on left: 174
        on right: 175
    $@57 (172)
        on left: 176
        on right: 177
    with_statement (173)
        on left: 180
        on right: 147
    $@58 (174)
        on left: 178
        on right: 180
    $@59 (175)
        on left: 179
        on right: 180
    variable_list (176)
        on left: 181
        on right: 180
    variable_list_rept (177)
        on left: 182 184
        on right: 181 184
    $@60 (178)
        on left: 183
        on right: 184
    procedure_statement (179)
        on left: 185 188 191
        on right: 140
    $@61 (180)
        on left: 186
        on right: 188
    $@62 (181)
        on left: 187
        on right: 188
    $@63 (182)
        on left: 189
        on right: 191
    $@64 (183)
        on left: 190
        on right: 191


State 0

    0 $accept: . program $end

    error    shift, and go to state 1
    PROGRAM  shift, and go to state 2

    program  go to state 3


State 1

    4 program: error . ID ';' $@2 block

    ID  shift, and go to state 4


State 2

    2 program: PROGRAM . ID ';' $@1 block

    ID  shift, and go to state 5


State 3

    0 $accept: program . $end

    $end  shift, and go to state 6


State 4

    4 program: error ID . ';' $@2 block

    ';'  shift, and go to state 7


State 5

    2 program: PROGRAM ID . ';' $@1 block

    ';'  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 program: error ID ';' . $@2 block

    $default  reduce using rule 3 ($@2)

    $@2  go to state 9


State 8

    2 program: PROGRAM ID ';' . $@1 block

    $default  reduce using rule 1 ($@1)

    $@1  go to state 10


State 9

    4 program: error ID ';' $@2 . block

    error  shift, and go to state 11

    FUNCTION   reduce using rule 9 (procedure_function_decl_part)
    PROCEDURE  reduce using rule 9 (procedure_function_decl_part)
    _BEGIN     reduce using rule 9 (procedure_function_decl_part)
    VAR        reduce using rule 9 (procedure_function_decl_part)

    block                         go to state 12
    procedure_function_decl_part  go to state 13


State 10

    2 program: PROGRAM ID ';' $@1 . block

    error  shift, and go to state 11

    FUNCTION   reduce using rule 9 (procedure_function_decl_part)
    PROCEDURE  reduce using rule 9 (procedure_function_decl_part)
    _BEGIN     reduce using rule 9 (procedure_function_decl_part)
    VAR        reduce using rule 9 (procedure_function_decl_part)

    block                         go to state 14
    procedure_function_decl_part  go to state 13


State 11

    6 block: error . var_decl_part statement_part

    VAR  shift, and go to state 15

    $default  reduce using rule 44 (var_decl_part)

    var_decl_part  go to state 16


State 12

    4 program: error ID ';' $@2 block .

    $default  reduce using rule 4 (program)


State 13

    5 block: procedure_function_decl_part . var_decl_part statement_part
   10 procedure_function_decl_part: procedure_function_decl_part . procedure_or_function ';'

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    VAR        shift, and go to state 15

    $default  reduce using rule 44 (var_decl_part)

    procedure_or_function    go to state 19
    procedure_decl           go to state 20
    procedure_header         go to state 21
    procedure_header_common  go to state 22
    function_decl            go to state 23
    function_header          go to state 24
    var_decl_part            go to state 25


State 14

    2 program: PROGRAM ID ';' $@1 block .

    $default  reduce using rule 2 (program)


State 15

   46 var_decl_part: VAR . $@17 var_decl var_decl_rept EOSE

    $default  reduce using rule 45 ($@17)

    $@17  go to state 26


State 16

    6 block: error var_decl_part . statement_part

    _BEGIN  shift, and go to state 27

    statement_part            go to state 28
    first_compound_statement  go to state 29


State 17

   37 function_header: FUNCTION . ID $@9 ':' $@10 return_type $@11 ';'
   43                | FUNCTION . ID $@12 '(' $@13 formal_parameter_section_list ')' $@14 ':' $@15 return_type $@16 ';'

    ID  shift, and go to state 30


State 18

   19 procedure_header_common: PROCEDURE . $@5 ID

    $default  reduce using rule 18 ($@5)

    $@5  go to state 31


State 19

   10 procedure_function_decl_part: procedure_function_decl_part procedure_or_function . ';'

    ';'  shift, and go to state 32


State 20

   11 procedure_or_function: procedure_decl .

    $default  reduce using rule 11 (procedure_or_function)


State 21

   13 procedure_decl: procedure_header . block_

    error  shift, and go to state 33

    FUNCTION   reduce using rule 9 (procedure_function_decl_part)
    PROCEDURE  reduce using rule 9 (procedure_function_decl_part)
    _BEGIN     reduce using rule 9 (procedure_function_decl_part)
    VAR        reduce using rule 9 (procedure_function_decl_part)

    block_                        go to state 34
    procedure_function_decl_part  go to state 35


State 22

   14 procedure_header: procedure_header_common . ';'
   17                 | procedure_header_common . '(' $@3 formal_parameter_section_list ')' $@4 ';'

    ';'  shift, and go to state 36
    '('  shift, and go to state 37


State 23

   12 procedure_or_function: function_decl .

    $default  reduce using rule 12 (procedure_or_function)


State 24

   33 function_decl: function_header . block_

    error  shift, and go to state 33

    FUNCTION   reduce using rule 9 (procedure_function_decl_part)
    PROCEDURE  reduce using rule 9 (procedure_function_decl_part)
    _BEGIN     reduce using rule 9 (procedure_function_decl_part)
    VAR        reduce using rule 9 (procedure_function_decl_part)

    block_                        go to state 38
    procedure_function_decl_part  go to state 35


State 25

    5 block: procedure_function_decl_part var_decl_part . statement_part

    _BEGIN  shift, and go to state 27

    statement_part            go to state 39
    first_compound_statement  go to state 29


State 26

   46 var_decl_part: VAR $@17 . var_decl var_decl_rept EOSE

    ID  shift, and go to state 40

    var_decl  go to state 41
    ID_list   go to state 42


State 27

  151 first_compound_statement: _BEGIN . $@44 statement rept_statement $@45 END $@46 '.'

    $default  reduce using rule 148 ($@44)

    $@44  go to state 43


State 28

    6 block: error var_decl_part statement_part .

    $default  reduce using rule 6 (block)


State 29

   79 statement_part: first_compound_statement .

    $default  reduce using rule 79 (statement_part)


State 30

   37 function_header: FUNCTION ID . $@9 ':' $@10 return_type $@11 ';'
   43                | FUNCTION ID . $@12 '(' $@13 formal_parameter_section_list ')' $@14 ':' $@15 return_type $@16 ';'

    '('       reduce using rule 38 ($@12)
    $default  reduce using rule 34 ($@9)

    $@9   go to state 44
    $@12  go to state 45


State 31

   19 procedure_header_common: PROCEDURE $@5 . ID

    ID  shift, and go to state 46


State 32

   10 procedure_function_decl_part: procedure_function_decl_part procedure_or_function ';' .

    $default  reduce using rule 10 (procedure_function_decl_part)


State 33

    8 block_: error . var_decl_part statement_part_

    VAR  shift, and go to state 15

    $default  reduce using rule 44 (var_decl_part)

    var_decl_part  go to state 47


State 34

   13 procedure_decl: procedure_header block_ .

    $default  reduce using rule 13 (procedure_decl)


State 35

    7 block_: procedure_function_decl_part . var_decl_part statement_part_
   10 procedure_function_decl_part: procedure_function_decl_part . procedure_or_function ';'

    FUNCTION   shift, and go to state 17
    PROCEDURE  shift, and go to state 18
    VAR        shift, and go to state 15

    $default  reduce using rule 44 (var_decl_part)

    procedure_or_function    go to state 19
    procedure_decl           go to state 20
    procedure_header         go to state 21
    procedure_header_common  go to state 22
    function_decl            go to state 23
    function_header          go to state 24
    var_decl_part            go to state 48


State 36

   14 procedure_header: procedure_header_common ';' .

    $default  reduce using rule 14 (procedure_header)


State 37

   17 procedure_header: procedure_header_common '(' . $@3 formal_parameter_section_list ')' $@4 ';'

    $default  reduce using rule 15 ($@3)

    $@3  go to state 49


State 38

   33 function_decl: function_header block_ .

    $default  reduce using rule 33 (function_decl)


State 39

    5 block: procedure_function_decl_part var_decl_part statement_part .

    $default  reduce using rule 5 (block)


State 40

   76 ID_list: ID . $@26 ID_list_rept

    $default  reduce using rule 75 ($@26)

    $@26  go to state 50


State 41

   46 var_decl_part: VAR $@17 var_decl . var_decl_rept EOSE

    $default  reduce using rule 50 (var_decl_rept)

    var_decl_rept  go to state 51


State 42

   48 var_decl: ID_list . ':' $@18 type
   49         | ID_list . error type

    error  shift, and go to state 52
    ':'    shift, and go to state 53


State 43

  151 first_compound_statement: _BEGIN $@44 . statement rept_statement $@45 END $@46 '.'

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    END  reduce using rule 137 (statement)
    ';'  reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 72
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 44

   37 function_header: FUNCTION ID $@9 . ':' $@10 return_type $@11 ';'

    ':'  shift, and go to state 83


State 45

   43 function_header: FUNCTION ID $@12 . '(' $@13 formal_parameter_section_list ')' $@14 ':' $@15 return_type $@16 ';'

    '('  shift, and go to state 84


State 46

   19 procedure_header_common: PROCEDURE $@5 ID .

    $default  reduce using rule 19 (procedure_header_common)


State 47

    8 block_: error var_decl_part . statement_part_

    _BEGIN  shift, and go to state 57

    statement_part_     go to state 85
    compound_statement  go to state 86


State 48

    7 block_: procedure_function_decl_part var_decl_part . statement_part_

    _BEGIN  shift, and go to state 57

    statement_part_     go to state 87
    compound_statement  go to state 86


State 49

   17 procedure_header: procedure_header_common '(' $@3 . formal_parameter_section_list ')' $@4 ';'

    VAR  shift, and go to state 88
    ID   shift, and go to state 40

    formal_parameter_section_list  go to state 89
    formal_parameter_section       go to state 90
    parameter_group                go to state 91
    ID_list                        go to state 92


State 50

   76 ID_list: ID $@26 . ID_list_rept

    $default  reduce using rule 77 (ID_list_rept)

    ID_list_rept  go to state 93


State 51

   46 var_decl_part: VAR $@17 var_decl var_decl_rept . EOSE
   51 var_decl_rept: var_decl_rept . EOSE var_decl

    ';'  shift, and go to state 94

    EOSE  go to state 95


State 52

   49 var_decl: ID_list error . type

    ARRAY  shift, and go to state 96
    FLOAT  shift, and go to state 97
    INT    shift, and go to state 98
    ID     shift, and go to state 99
    TYPE   shift, and go to state 100
    '('    shift, and go to state 101

    type             go to state 102
    simple_type      go to state 103
    scalar_type      go to state 104
    subrange_type    go to state 105
    const            go to state 106
    type_identifier  go to state 107
    structured_type  go to state 108
    array_type       go to state 109


State 53

   48 var_decl: ID_list ':' . $@18 type

    $default  reduce using rule 47 ($@18)

    $@18  go to state 110


State 54

  119 if_statement: error . statement else

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    error  [reduce using rule 137 (statement)]
    ELSE   reduce using rule 137 (statement)
    END    reduce using rule 137 (statement)
    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 111
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 55

  118 if_statement: IF . $@38 expression THEN $@39 statement else

    $default  reduce using rule 116 ($@38)

    $@38  go to state 112


State 56

  124 case_statement: CASE . expression OF case_list_element case_list_rept END

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 117
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 57

  153 compound_statement: _BEGIN . $@47 statement rept_statement END

    $default  reduce using rule 152 ($@47)

    $@47  go to state 123


State 58

  163 while_stat: WHILE . $@48 expression DO $@49 statement

    $default  reduce using rule 161 ($@48)

    $@48  go to state 124


State 59

  166 rept_stat: REPEAT . $@50 statement rept_rept_stat UNTIL $@51 expression

    $default  reduce using rule 164 ($@50)

    $@50  go to state 125


State 60

  173 for_stat: FOR . $@52 ID $@53 ASSIGN $@54 for_list DO $@55 statement

    $default  reduce using rule 169 ($@52)

    $@52  go to state 126


State 61

  180 with_statement: WITH . $@58 variable_list DO $@59 statement

    $default  reduce using rule 178 ($@58)

    $@58  go to state 127


State 62

   99 entire_variable: FLOAT .

    $default  reduce using rule 99 (entire_variable)


State 63

   98 entire_variable: INT .

    $default  reduce using rule 98 (entire_variable)


State 64

  100 entire_variable: STRING .

    $default  reduce using rule 100 (entire_variable)


State 65

  101 entire_variable: ID .
  191 procedure_statement: ID . $@63 '(' $@64 actual_parameter actual_parameter_list ')'

    '('       reduce using rule 189 ($@63)
    $default  reduce using rule 101 (entire_variable)

    $@63  go to state 128


State 66

  185 procedure_statement: BUILTIN_FUNCTION .
  188                    | BUILTIN_FUNCTION . $@61 '(' $@62 actual_parameter actual_parameter_list ')'

    '('       reduce using rule 186 ($@61)
    $default  reduce using rule 185 (procedure_statement)

    $@61  go to state 129


State 67

  103 indexed_variable: variable . '[' $@32 expression ']'
  142 assignment_statement: variable . ASSIGN $@43 expression
  143                     | variable . error expression

    error   shift, and go to state 130
    ASSIGN  shift, and go to state 131
    '['     shift, and go to state 132


State 68

   96 variable: entire_variable .

    $default  reduce using rule 96 (variable)


State 69

   97 variable: indexed_variable .

    $default  reduce using rule 97 (variable)


State 70

  154 conditional_statement: if_statement .

    $default  reduce using rule 154 (conditional_statement)


State 71

  155 conditional_statement: case_statement .

    $default  reduce using rule 155 (conditional_statement)


State 72

  151 first_compound_statement: _BEGIN $@44 statement . rept_statement $@45 END $@46 '.'

    $default  reduce using rule 156 (rept_statement)

    rept_statement  go to state 133


State 73

  139 statement: assignment_statement .

    $default  reduce using rule 139 (statement)


State 74

  138 statement: structured_statement .

    $default  reduce using rule 138 (statement)


State 75

  144 structured_statement: compound_statement .

    $default  reduce using rule 144 (structured_statement)


State 76

  145 structured_statement: conditional_statement .

    $default  reduce using rule 145 (structured_statement)


State 77

  146 structured_statement: reptive_statement .

    $default  reduce using rule 146 (structured_statement)


State 78

  158 reptive_statement: while_stat .

    $default  reduce using rule 158 (reptive_statement)


State 79

  159 reptive_statement: rept_stat .

    $default  reduce using rule 159 (reptive_statement)


State 80

  160 reptive_statement: for_stat .

    $default  reduce using rule 160 (reptive_statement)


State 81

  147 structured_statement: with_statement .

    $default  reduce using rule 147 (structured_statement)


State 82

  140 statement: procedure_statement .

    $default  reduce using rule 140 (statement)


State 83

   37 function_header: FUNCTION ID $@9 ':' . $@10 return_type $@11 ';'

    $default  reduce using rule 35 ($@10)

    $@10  go to state 134


State 84

   43 function_header: FUNCTION ID $@12 '(' . $@13 formal_parameter_section_list ')' $@14 ':' $@15 return_type $@16 ';'

    $default  reduce using rule 39 ($@13)

    $@13  go to state 135


State 85

    8 block_: error var_decl_part statement_part_ .

    $default  reduce using rule 8 (block_)


State 86

   80 statement_part_: compound_statement .

    $default  reduce using rule 80 (statement_part_)


State 87

    7 block_: procedure_function_decl_part var_decl_part statement_part_ .

    $default  reduce using rule 7 (block_)


State 88

   26 formal_parameter_section: VAR . $@7 parameter_group

    $default  reduce using rule 25 ($@7)

    $@7  go to state 136


State 89

   17 procedure_header: procedure_header_common '(' $@3 formal_parameter_section_list . ')' $@4 ';'

    ')'  shift, and go to state 137


State 90

   20 formal_parameter_section_list: formal_parameter_section . formal_parameter_section_rept

    $default  reduce using rule 21 (formal_parameter_section_rept)

    formal_parameter_section_rept  go to state 138


State 91

   24 formal_parameter_section: parameter_group .

    $default  reduce using rule 24 (formal_parameter_section)


State 92

   28 parameter_group: ID_list . ':' $@8 parameter_type

    ':'  shift, and go to state 139


State 93

   76 ID_list: ID $@26 ID_list_rept .
   78 ID_list_rept: ID_list_rept . ',' ID

    ','  shift, and go to state 140

    $default  reduce using rule 76 (ID_list)


State 94

  115 EOSE: ';' .

    $default  reduce using rule 115 (EOSE)


State 95

   46 var_decl_part: VAR $@17 var_decl var_decl_rept EOSE .
   51 var_decl_rept: var_decl_rept EOSE . var_decl

    ID  shift, and go to state 40

    $default  reduce using rule 46 (var_decl_part)

    var_decl  go to state 141
    ID_list   go to state 42


State 96

   70 array_type: ARRAY . $@21 '[' $@22 index_type index_type_rept ']' $@23 OF $@24 type

    $default  reduce using rule 66 ($@21)

    $@21  go to state 142


State 97

   62 const: FLOAT .

    $default  reduce using rule 62 (const)


State 98

   61 const: INT .

    $default  reduce using rule 61 (const)


State 99

   63 const: ID .

    $default  reduce using rule 63 (const)


State 100

   64 type_identifier: TYPE .

    $default  reduce using rule 64 (type_identifier)


State 101

   58 scalar_type: '(' . $@19 ID_list ')'

    $default  reduce using rule 57 ($@19)

    $@19  go to state 143


State 102

   49 var_decl: ID_list error type .

    $default  reduce using rule 49 (var_decl)


State 103

   52 type: simple_type .

    $default  reduce using rule 52 (type)


State 104

   54 simple_type: scalar_type .

    $default  reduce using rule 54 (simple_type)


State 105

   55 simple_type: subrange_type .

    $default  reduce using rule 55 (simple_type)


State 106

   60 subrange_type: const . '.' '.' $@20 const

    '.'  shift, and go to state 144


State 107

   56 simple_type: type_identifier .

    $default  reduce using rule 56 (simple_type)


State 108

   53 type: structured_type .

    $default  reduce using rule 53 (type)


State 109

   65 structured_type: array_type .

    $default  reduce using rule 65 (structured_type)


State 110

   48 var_decl: ID_list ':' $@18 . type

    ARRAY  shift, and go to state 96
    FLOAT  shift, and go to state 97
    INT    shift, and go to state 98
    ID     shift, and go to state 99
    TYPE   shift, and go to state 100
    '('    shift, and go to state 101

    type             go to state 145
    simple_type      go to state 103
    scalar_type      go to state 104
    subrange_type    go to state 105
    const            go to state 106
    type_identifier  go to state 107
    structured_type  go to state 108
    array_type       go to state 109


State 111

  119 if_statement: error statement . else

    error  shift, and go to state 146
    ELSE   shift, and go to state 147

    error  [reduce using rule 120 (else)]
    ELSE   [reduce using rule 120 (else)]
    END    reduce using rule 120 (else)
    UNTIL  reduce using rule 120 (else)
    ';'    reduce using rule 120 (else)

    else  go to state 148


State 112

  118 if_statement: IF $@38 . expression THEN $@39 statement else

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 149
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 113

   94 factor: LOGICALNOT . $@31 factor

    $default  reduce using rule 93 ($@31)

    $@31  go to state 150


State 114

  101 entire_variable: ID .
  110 function_designator: ID . $@35 '(' $@36 actual_parameter actual_parameter_list ')'

    '('       reduce using rule 108 ($@35)
    $default  reduce using rule 101 (entire_variable)

    $@35  go to state 151


State 115

  104 function_designator: BUILTIN_FUNCTION .
  107                    | BUILTIN_FUNCTION . $@33 '(' $@34 actual_parameter actual_parameter_list ')'

    '('       reduce using rule 105 ($@33)
    $default  reduce using rule 104 (function_designator)

    $@33  go to state 152


State 116

   92 factor: '(' . $@30 expression ')'

    $default  reduce using rule 91 ($@30)

    $@30  go to state 153


State 117

  124 case_statement: CASE expression . OF case_list_element case_list_rept END

    OF  shift, and go to state 154


State 118

   81 expression: simple_expression .
   83           | simple_expression . RELATIONAL_OP $@27 simple_expression
   86 simple_expression: simple_expression . ADD_OP $@28 term

    RELATIONAL_OP  shift, and go to state 155
    ADD_OP         shift, and go to state 156

    $default  reduce using rule 81 (expression)


State 119

   84 simple_expression: term .
   89 term: term . MUL_OP $@29 factor

    MUL_OP  shift, and go to state 157

    $default  reduce using rule 84 (simple_expression)


State 120

   87 term: factor .

    $default  reduce using rule 87 (term)


State 121

   90 factor: variable .
  103 indexed_variable: variable . '[' $@32 expression ']'

    '['  shift, and go to state 132

    $default  reduce using rule 90 (factor)


State 122

   95 factor: function_designator .

    $default  reduce using rule 95 (factor)


State 123

  153 compound_statement: _BEGIN $@47 . statement rept_statement END

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    END  reduce using rule 137 (statement)
    ';'  reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 158
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 124

  163 while_stat: WHILE $@48 . expression DO $@49 statement

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 159
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 125

  166 rept_stat: REPEAT $@50 . statement rept_rept_stat UNTIL $@51 expression

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 160
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 126

  173 for_stat: FOR $@52 . ID $@53 ASSIGN $@54 for_list DO $@55 statement

    ID  shift, and go to state 161


State 127

  180 with_statement: WITH $@58 . variable_list DO $@59 statement

    FLOAT   shift, and go to state 62
    INT     shift, and go to state 63
    STRING  shift, and go to state 64
    ID      shift, and go to state 162

    variable          go to state 163
    entire_variable   go to state 68
    indexed_variable  go to state 69
    variable_list     go to state 164


State 128

  191 procedure_statement: ID $@63 . '(' $@64 actual_parameter actual_parameter_list ')'

    '('  shift, and go to state 165


State 129

  188 procedure_statement: BUILTIN_FUNCTION $@61 . '(' $@62 actual_parameter actual_parameter_list ')'

    '('  shift, and go to state 166


State 130

  143 assignment_statement: variable error . expression

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 167
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 131

  142 assignment_statement: variable ASSIGN . $@43 expression

    $default  reduce using rule 141 ($@43)

    $@43  go to state 168


State 132

  103 indexed_variable: variable '[' . $@32 expression ']'

    $default  reduce using rule 102 ($@32)

    $@32  go to state 169


State 133

  151 first_compound_statement: _BEGIN $@44 statement rept_statement . $@45 END $@46 '.'
  157 rept_statement: rept_statement . EOSE statement

    ';'  shift, and go to state 94

    $default  reduce using rule 149 ($@45)

    EOSE  go to state 170
    $@45  go to state 171


State 134

   37 function_header: FUNCTION ID $@9 ':' $@10 . return_type $@11 ';'

    ARRAY  shift, and go to state 96
    TYPE   shift, and go to state 100

    return_type      go to state 172
    type_identifier  go to state 173
    structured_type  go to state 174
    array_type       go to state 109


State 135

   43 function_header: FUNCTION ID $@12 '(' $@13 . formal_parameter_section_list ')' $@14 ':' $@15 return_type $@16 ';'

    VAR  shift, and go to state 88
    ID   shift, and go to state 40

    formal_parameter_section_list  go to state 175
    formal_parameter_section       go to state 90
    parameter_group                go to state 91
    ID_list                        go to state 92


State 136

   26 formal_parameter_section: VAR $@7 . parameter_group

    ID  shift, and go to state 40

    parameter_group  go to state 176
    ID_list          go to state 92


State 137

   17 procedure_header: procedure_header_common '(' $@3 formal_parameter_section_list ')' . $@4 ';'

    $default  reduce using rule 16 ($@4)

    $@4  go to state 177


State 138

   20 formal_parameter_section_list: formal_parameter_section formal_parameter_section_rept .
   23 formal_parameter_section_rept: formal_parameter_section_rept . ';' $@6 formal_parameter_section

    ';'  shift, and go to state 178

    $default  reduce using rule 20 (formal_parameter_section_list)


State 139

   28 parameter_group: ID_list ':' . $@8 parameter_type

    $default  reduce using rule 27 ($@8)

    $@8  go to state 179


State 140

   78 ID_list_rept: ID_list_rept ',' . ID

    ID  shift, and go to state 180


State 141

   51 var_decl_rept: var_decl_rept EOSE var_decl .

    $default  reduce using rule 51 (var_decl_rept)


State 142

   70 array_type: ARRAY $@21 . '[' $@22 index_type index_type_rept ']' $@23 OF $@24 type

    '['  shift, and go to state 181


State 143

   58 scalar_type: '(' $@19 . ID_list ')'

    ID  shift, and go to state 40

    ID_list  go to state 182


State 144

   60 subrange_type: const '.' . '.' $@20 const

    '.'  shift, and go to state 183


State 145

   48 var_decl: ID_list ':' $@18 type .

    $default  reduce using rule 48 (var_decl)


State 146

  123 else: error . statement

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    error  [reduce using rule 137 (statement)]
    ELSE   reduce using rule 137 (statement)
    END    reduce using rule 137 (statement)
    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 184
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 147

  122 else: ELSE . $@40 statement

    $default  reduce using rule 121 ($@40)

    $@40  go to state 185


State 148

  119 if_statement: error statement else .

    $default  reduce using rule 119 (if_statement)


State 149

  118 if_statement: IF $@38 expression . THEN $@39 statement else

    THEN  shift, and go to state 186


State 150

   94 factor: LOGICALNOT $@31 . factor

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    factor               go to state 187
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 151

  110 function_designator: ID $@35 . '(' $@36 actual_parameter actual_parameter_list ')'

    '('  shift, and go to state 188


State 152

  107 function_designator: BUILTIN_FUNCTION $@33 . '(' $@34 actual_parameter actual_parameter_list ')'

    '('  shift, and go to state 189


State 153

   92 factor: '(' $@30 . expression ')'

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 190
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 154

  124 case_statement: CASE expression OF . case_list_element case_list_rept END

    INT     shift, and go to state 191
    STRING  shift, and go to state 192
    ID      shift, and go to state 193

    $default  reduce using rule 127 (case_list_element)

    case_list_element  go to state 194
    case_label_list    go to state 195
    case_label         go to state 196


State 155

   83 expression: simple_expression RELATIONAL_OP . $@27 simple_expression

    $default  reduce using rule 82 ($@27)

    $@27  go to state 197


State 156

   86 simple_expression: simple_expression ADD_OP . $@28 term

    $default  reduce using rule 85 ($@28)

    $@28  go to state 198


State 157

   89 term: term MUL_OP . $@29 factor

    $default  reduce using rule 88 ($@29)

    $@29  go to state 199


State 158

  153 compound_statement: _BEGIN $@47 statement . rept_statement END

    $default  reduce using rule 156 (rept_statement)

    rept_statement  go to state 200


State 159

  163 while_stat: WHILE $@48 expression . DO $@49 statement

    DO  shift, and go to state 201


State 160

  166 rept_stat: REPEAT $@50 statement . rept_rept_stat UNTIL $@51 expression

    $default  reduce using rule 167 (rept_rept_stat)

    rept_rept_stat  go to state 202


State 161

  173 for_stat: FOR $@52 ID . $@53 ASSIGN $@54 for_list DO $@55 statement

    $default  reduce using rule 170 ($@53)

    $@53  go to state 203


State 162

  101 entire_variable: ID .

    $default  reduce using rule 101 (entire_variable)


State 163

  103 indexed_variable: variable . '[' $@32 expression ']'
  181 variable_list: variable . variable_list_rept

    '['  shift, and go to state 132

    $default  reduce using rule 182 (variable_list_rept)

    variable_list_rept  go to state 204


State 164

  180 with_statement: WITH $@58 variable_list . DO $@59 statement

    DO  shift, and go to state 205


State 165

  191 procedure_statement: ID $@63 '(' . $@64 actual_parameter actual_parameter_list ')'

    $default  reduce using rule 190 ($@64)

    $@64  go to state 206


State 166

  188 procedure_statement: BUILTIN_FUNCTION $@61 '(' . $@62 actual_parameter actual_parameter_list ')'

    $default  reduce using rule 187 ($@62)

    $@62  go to state 207


State 167

  143 assignment_statement: variable error expression .

    $default  reduce using rule 143 (assignment_statement)


State 168

  142 assignment_statement: variable ASSIGN $@43 . expression

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 208
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 169

  103 indexed_variable: variable '[' $@32 . expression ']'

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 209
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 170

  157 rept_statement: rept_statement EOSE . statement

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    END  reduce using rule 137 (statement)
    ';'  reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 210
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 171

  151 first_compound_statement: _BEGIN $@44 statement rept_statement $@45 . END $@46 '.'

    END  shift, and go to state 211


State 172

   37 function_header: FUNCTION ID $@9 ':' $@10 return_type . $@11 ';'

    $default  reduce using rule 36 ($@11)

    $@11  go to state 212


State 173

   31 return_type: type_identifier .

    $default  reduce using rule 31 (return_type)


State 174

   32 return_type: structured_type .

    $default  reduce using rule 32 (return_type)


State 175

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list . ')' $@14 ':' $@15 return_type $@16 ';'

    ')'  shift, and go to state 213


State 176

   26 formal_parameter_section: VAR $@7 parameter_group .

    $default  reduce using rule 26 (formal_parameter_section)


State 177

   17 procedure_header: procedure_header_common '(' $@3 formal_parameter_section_list ')' $@4 . ';'

    ';'  shift, and go to state 214


State 178

   23 formal_parameter_section_rept: formal_parameter_section_rept ';' . $@6 formal_parameter_section

    $default  reduce using rule 22 ($@6)

    $@6  go to state 215


State 179

   28 parameter_group: ID_list ':' $@8 . parameter_type

    ARRAY  shift, and go to state 96
    TYPE   shift, and go to state 100

    parameter_type   go to state 216
    type_identifier  go to state 217
    structured_type  go to state 218
    array_type       go to state 109


State 180

   78 ID_list_rept: ID_list_rept ',' ID .

    $default  reduce using rule 78 (ID_list_rept)


State 181

   70 array_type: ARRAY $@21 '[' . $@22 index_type index_type_rept ']' $@23 OF $@24 type

    $default  reduce using rule 67 ($@22)

    $@22  go to state 219


State 182

   58 scalar_type: '(' $@19 ID_list . ')'

    ')'  shift, and go to state 220


State 183

   60 subrange_type: const '.' '.' . $@20 const

    $default  reduce using rule 59 ($@20)

    $@20  go to state 221


State 184

  123 else: error statement .

    $default  reduce using rule 123 (else)


State 185

  122 else: ELSE $@40 . statement

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    error  [reduce using rule 137 (statement)]
    ELSE   reduce using rule 137 (statement)
    END    reduce using rule 137 (statement)
    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 222
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 186

  118 if_statement: IF $@38 expression THEN . $@39 statement else

    $default  reduce using rule 117 ($@39)

    $@39  go to state 223


State 187

   94 factor: LOGICALNOT $@31 factor .

    $default  reduce using rule 94 (factor)


State 188

  110 function_designator: ID $@35 '(' . $@36 actual_parameter actual_parameter_list ')'

    $default  reduce using rule 109 ($@36)

    $@36  go to state 224


State 189

  107 function_designator: BUILTIN_FUNCTION $@33 '(' . $@34 actual_parameter actual_parameter_list ')'

    $default  reduce using rule 106 ($@34)

    $@34  go to state 225


State 190

   92 factor: '(' $@30 expression . ')'

    ')'  shift, and go to state 226


State 191

  134 case_label: INT .

    $default  reduce using rule 134 (case_label)


State 192

  135 case_label: STRING .

    $default  reduce using rule 135 (case_label)


State 193

  136 case_label: ID .

    $default  reduce using rule 136 (case_label)


State 194

  124 case_statement: CASE expression OF case_list_element . case_list_rept END

    ';'  shift, and go to state 94

    $default  reduce using rule 125 (case_list_rept)

    EOSE            go to state 227
    case_list_rept  go to state 228


State 195

  129 case_list_element: case_label_list . ':' $@41 statement

    ':'  shift, and go to state 229


State 196

  130 case_label_list: case_label . case_label_rept

    $default  reduce using rule 131 (case_label_rept)

    case_label_rept  go to state 230


State 197

   83 expression: simple_expression RELATIONAL_OP $@27 . simple_expression

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    simple_expression    go to state 231
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 198

   86 simple_expression: simple_expression ADD_OP $@28 . term

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    term                 go to state 232
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 199

   89 term: term MUL_OP $@29 . factor

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    factor               go to state 233
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 200

  153 compound_statement: _BEGIN $@47 statement rept_statement . END
  157 rept_statement: rept_statement . EOSE statement

    END  shift, and go to state 234
    ';'  shift, and go to state 94

    EOSE  go to state 170


State 201

  163 while_stat: WHILE $@48 expression DO . $@49 statement

    $default  reduce using rule 162 ($@49)

    $@49  go to state 235


State 202

  166 rept_stat: REPEAT $@50 statement rept_rept_stat . UNTIL $@51 expression
  168 rept_rept_stat: rept_rept_stat . EOSE statement

    UNTIL  shift, and go to state 236
    ';'    shift, and go to state 94

    EOSE  go to state 237


State 203

  173 for_stat: FOR $@52 ID $@53 . ASSIGN $@54 for_list DO $@55 statement

    ASSIGN  shift, and go to state 238


State 204

  181 variable_list: variable variable_list_rept .
  184 variable_list_rept: variable_list_rept . ',' $@60 variable

    ','  shift, and go to state 239

    $default  reduce using rule 181 (variable_list)


State 205

  180 with_statement: WITH $@58 variable_list DO . $@59 statement

    $default  reduce using rule 179 ($@59)

    $@59  go to state 240


State 206

  191 procedure_statement: ID $@63 '(' $@64 . actual_parameter actual_parameter_list ')'

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 241
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122
    actual_parameter     go to state 242


State 207

  188 procedure_statement: BUILTIN_FUNCTION $@61 '(' $@62 . actual_parameter actual_parameter_list ')'

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 241
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122
    actual_parameter     go to state 243


State 208

  142 assignment_statement: variable ASSIGN $@43 expression .

    $default  reduce using rule 142 (assignment_statement)


State 209

  103 indexed_variable: variable '[' $@32 expression . ']'

    ']'  shift, and go to state 244


State 210

  157 rept_statement: rept_statement EOSE statement .

    $default  reduce using rule 157 (rept_statement)


State 211

  151 first_compound_statement: _BEGIN $@44 statement rept_statement $@45 END . $@46 '.'

    $default  reduce using rule 150 ($@46)

    $@46  go to state 245


State 212

   37 function_header: FUNCTION ID $@9 ':' $@10 return_type $@11 . ';'

    ';'  shift, and go to state 246


State 213

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list ')' . $@14 ':' $@15 return_type $@16 ';'

    $default  reduce using rule 40 ($@14)

    $@14  go to state 247


State 214

   17 procedure_header: procedure_header_common '(' $@3 formal_parameter_section_list ')' $@4 ';' .

    $default  reduce using rule 17 (procedure_header)


State 215

   23 formal_parameter_section_rept: formal_parameter_section_rept ';' $@6 . formal_parameter_section

    VAR  shift, and go to state 88
    ID   shift, and go to state 40

    formal_parameter_section  go to state 248
    parameter_group           go to state 91
    ID_list                   go to state 92


State 216

   28 parameter_group: ID_list ':' $@8 parameter_type .

    $default  reduce using rule 28 (parameter_group)


State 217

   29 parameter_type: type_identifier .

    $default  reduce using rule 29 (parameter_type)


State 218

   30 parameter_type: structured_type .

    $default  reduce using rule 30 (parameter_type)


State 219

   70 array_type: ARRAY $@21 '[' $@22 . index_type index_type_rept ']' $@23 OF $@24 type

    FLOAT  shift, and go to state 97
    INT    shift, and go to state 98
    ID     shift, and go to state 99
    TYPE   shift, and go to state 100
    '('    shift, and go to state 101

    simple_type      go to state 249
    scalar_type      go to state 104
    subrange_type    go to state 105
    const            go to state 106
    type_identifier  go to state 107
    index_type       go to state 250


State 220

   58 scalar_type: '(' $@19 ID_list ')' .

    $default  reduce using rule 58 (scalar_type)


State 221

   60 subrange_type: const '.' '.' $@20 . const

    FLOAT  shift, and go to state 97
    INT    shift, and go to state 98
    ID     shift, and go to state 99

    const  go to state 251


State 222

  122 else: ELSE $@40 statement .

    $default  reduce using rule 122 (else)


State 223

  118 if_statement: IF $@38 expression THEN $@39 . statement else

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    error  [reduce using rule 137 (statement)]
    ELSE   reduce using rule 137 (statement)
    END    reduce using rule 137 (statement)
    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 252
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 224

  110 function_designator: ID $@35 '(' $@36 . actual_parameter actual_parameter_list ')'

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 241
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122
    actual_parameter     go to state 253


State 225

  107 function_designator: BUILTIN_FUNCTION $@33 '(' $@34 . actual_parameter actual_parameter_list ')'

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 241
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122
    actual_parameter     go to state 254


State 226

   92 factor: '(' $@30 expression ')' .

    $default  reduce using rule 92 (factor)


State 227

  126 case_list_rept: EOSE . case_list_rept

    ';'  shift, and go to state 94

    $default  reduce using rule 125 (case_list_rept)

    EOSE            go to state 227
    case_list_rept  go to state 255


State 228

  124 case_statement: CASE expression OF case_list_element case_list_rept . END

    END  shift, and go to state 256


State 229

  129 case_list_element: case_label_list ':' . $@41 statement

    $default  reduce using rule 128 ($@41)

    $@41  go to state 257


State 230

  130 case_label_list: case_label case_label_rept .
  133 case_label_rept: case_label_rept . ',' $@42 case_label

    ','  shift, and go to state 258

    $default  reduce using rule 130 (case_label_list)


State 231

   83 expression: simple_expression RELATIONAL_OP $@27 simple_expression .
   86 simple_expression: simple_expression . ADD_OP $@28 term

    ADD_OP  shift, and go to state 156

    $default  reduce using rule 83 (expression)


State 232

   86 simple_expression: simple_expression ADD_OP $@28 term .
   89 term: term . MUL_OP $@29 factor

    MUL_OP  shift, and go to state 157

    $default  reduce using rule 86 (simple_expression)


State 233

   89 term: term MUL_OP $@29 factor .

    $default  reduce using rule 89 (term)


State 234

  153 compound_statement: _BEGIN $@47 statement rept_statement END .

    $default  reduce using rule 153 (compound_statement)


State 235

  163 while_stat: WHILE $@48 expression DO $@49 . statement

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    error  [reduce using rule 137 (statement)]
    ELSE   reduce using rule 137 (statement)
    END    reduce using rule 137 (statement)
    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 259
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 236

  166 rept_stat: REPEAT $@50 statement rept_rept_stat UNTIL . $@51 expression

    $default  reduce using rule 165 ($@51)

    $@51  go to state 260


State 237

  168 rept_rept_stat: rept_rept_stat EOSE . statement

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 261
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 238

  173 for_stat: FOR $@52 ID $@53 ASSIGN . $@54 for_list DO $@55 statement

    $default  reduce using rule 171 ($@54)

    $@54  go to state 262


State 239

  184 variable_list_rept: variable_list_rept ',' . $@60 variable

    $default  reduce using rule 183 ($@60)

    $@60  go to state 263


State 240

  180 with_statement: WITH $@58 variable_list DO $@59 . statement

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    error  [reduce using rule 137 (statement)]
    ELSE   reduce using rule 137 (statement)
    END    reduce using rule 137 (statement)
    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 264
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 241

  114 actual_parameter: expression .

    $default  reduce using rule 114 (actual_parameter)


State 242

  191 procedure_statement: ID $@63 '(' $@64 actual_parameter . actual_parameter_list ')'

    $default  reduce using rule 111 (actual_parameter_list)

    actual_parameter_list  go to state 265


State 243

  188 procedure_statement: BUILTIN_FUNCTION $@61 '(' $@62 actual_parameter . actual_parameter_list ')'

    $default  reduce using rule 111 (actual_parameter_list)

    actual_parameter_list  go to state 266


State 244

  103 indexed_variable: variable '[' $@32 expression ']' .

    $default  reduce using rule 103 (indexed_variable)


State 245

  151 first_compound_statement: _BEGIN $@44 statement rept_statement $@45 END $@46 . '.'

    '.'  shift, and go to state 267


State 246

   37 function_header: FUNCTION ID $@9 ':' $@10 return_type $@11 ';' .

    $default  reduce using rule 37 (function_header)


State 247

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list ')' $@14 . ':' $@15 return_type $@16 ';'

    ':'  shift, and go to state 268


State 248

   23 formal_parameter_section_rept: formal_parameter_section_rept ';' $@6 formal_parameter_section .

    $default  reduce using rule 23 (formal_parameter_section_rept)


State 249

   71 index_type: simple_type .

    $default  reduce using rule 71 (index_type)


State 250

   70 array_type: ARRAY $@21 '[' $@22 index_type . index_type_rept ']' $@23 OF $@24 type

    $default  reduce using rule 72 (index_type_rept)

    index_type_rept  go to state 269


State 251

   60 subrange_type: const '.' '.' $@20 const .

    $default  reduce using rule 60 (subrange_type)


State 252

  118 if_statement: IF $@38 expression THEN $@39 statement . else

    error  shift, and go to state 146
    ELSE   shift, and go to state 147

    error  [reduce using rule 120 (else)]
    ELSE   [reduce using rule 120 (else)]
    END    reduce using rule 120 (else)
    UNTIL  reduce using rule 120 (else)
    ';'    reduce using rule 120 (else)

    else  go to state 270


State 253

  110 function_designator: ID $@35 '(' $@36 actual_parameter . actual_parameter_list ')'

    $default  reduce using rule 111 (actual_parameter_list)

    actual_parameter_list  go to state 271


State 254

  107 function_designator: BUILTIN_FUNCTION $@33 '(' $@34 actual_parameter . actual_parameter_list ')'

    $default  reduce using rule 111 (actual_parameter_list)

    actual_parameter_list  go to state 272


State 255

  126 case_list_rept: EOSE case_list_rept .

    $default  reduce using rule 126 (case_list_rept)


State 256

  124 case_statement: CASE expression OF case_list_element case_list_rept END .

    $default  reduce using rule 124 (case_statement)


State 257

  129 case_list_element: case_label_list ':' $@41 . statement

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    END  reduce using rule 137 (statement)
    ';'  reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 273
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 258

  133 case_label_rept: case_label_rept ',' . $@42 case_label

    $default  reduce using rule 132 ($@42)

    $@42  go to state 274


State 259

  163 while_stat: WHILE $@48 expression DO $@49 statement .

    $default  reduce using rule 163 (while_stat)


State 260

  166 rept_stat: REPEAT $@50 statement rept_rept_stat UNTIL $@51 . expression

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 275
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 261

  168 rept_rept_stat: rept_rept_stat EOSE statement .

    $default  reduce using rule 168 (rept_rept_stat)


State 262

  173 for_stat: FOR $@52 ID $@53 ASSIGN $@54 . for_list DO $@55 statement

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 276
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122
    for_list             go to state 277


State 263

  184 variable_list_rept: variable_list_rept ',' $@60 . variable

    FLOAT   shift, and go to state 62
    INT     shift, and go to state 63
    STRING  shift, and go to state 64
    ID      shift, and go to state 162

    variable          go to state 278
    entire_variable   go to state 68
    indexed_variable  go to state 69


State 264

  180 with_statement: WITH $@58 variable_list DO $@59 statement .

    $default  reduce using rule 180 (with_statement)


State 265

  113 actual_parameter_list: actual_parameter_list . ',' $@37 actual_parameter
  191 procedure_statement: ID $@63 '(' $@64 actual_parameter actual_parameter_list . ')'

    ')'  shift, and go to state 279
    ','  shift, and go to state 280


State 266

  113 actual_parameter_list: actual_parameter_list . ',' $@37 actual_parameter
  188 procedure_statement: BUILTIN_FUNCTION $@61 '(' $@62 actual_parameter actual_parameter_list . ')'

    ')'  shift, and go to state 281
    ','  shift, and go to state 280


State 267

  151 first_compound_statement: _BEGIN $@44 statement rept_statement $@45 END $@46 '.' .

    $default  reduce using rule 151 (first_compound_statement)


State 268

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list ')' $@14 ':' . $@15 return_type $@16 ';'

    $default  reduce using rule 41 ($@15)

    $@15  go to state 282


State 269

   70 array_type: ARRAY $@21 '[' $@22 index_type index_type_rept . ']' $@23 OF $@24 type
   74 index_type_rept: index_type_rept . ',' $@25 simple_type

    ']'  shift, and go to state 283
    ','  shift, and go to state 284


State 270

  118 if_statement: IF $@38 expression THEN $@39 statement else .

    $default  reduce using rule 118 (if_statement)


State 271

  110 function_designator: ID $@35 '(' $@36 actual_parameter actual_parameter_list . ')'
  113 actual_parameter_list: actual_parameter_list . ',' $@37 actual_parameter

    ')'  shift, and go to state 285
    ','  shift, and go to state 280


State 272

  107 function_designator: BUILTIN_FUNCTION $@33 '(' $@34 actual_parameter actual_parameter_list . ')'
  113 actual_parameter_list: actual_parameter_list . ',' $@37 actual_parameter

    ')'  shift, and go to state 286
    ','  shift, and go to state 280


State 273

  129 case_list_element: case_label_list ':' $@41 statement .

    $default  reduce using rule 129 (case_list_element)


State 274

  133 case_label_rept: case_label_rept ',' $@42 . case_label

    INT     shift, and go to state 191
    STRING  shift, and go to state 192
    ID      shift, and go to state 193

    case_label  go to state 287


State 275

  166 rept_stat: REPEAT $@50 statement rept_rept_stat UNTIL $@51 expression .

    $default  reduce using rule 166 (rept_stat)


State 276

  175 for_list: expression . TO $@56 expression
  177         | expression . DOWNTO $@57 expression

    TO      shift, and go to state 288
    DOWNTO  shift, and go to state 289


State 277

  173 for_stat: FOR $@52 ID $@53 ASSIGN $@54 for_list . DO $@55 statement

    DO  shift, and go to state 290


State 278

  103 indexed_variable: variable . '[' $@32 expression ']'
  184 variable_list_rept: variable_list_rept ',' $@60 variable .

    '['  shift, and go to state 132

    $default  reduce using rule 184 (variable_list_rept)


State 279

  191 procedure_statement: ID $@63 '(' $@64 actual_parameter actual_parameter_list ')' .

    $default  reduce using rule 191 (procedure_statement)


State 280

  113 actual_parameter_list: actual_parameter_list ',' . $@37 actual_parameter

    $default  reduce using rule 112 ($@37)

    $@37  go to state 291


State 281

  188 procedure_statement: BUILTIN_FUNCTION $@61 '(' $@62 actual_parameter actual_parameter_list ')' .

    $default  reduce using rule 188 (procedure_statement)


State 282

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list ')' $@14 ':' $@15 . return_type $@16 ';'

    ARRAY  shift, and go to state 96
    TYPE   shift, and go to state 100

    return_type      go to state 292
    type_identifier  go to state 173
    structured_type  go to state 174
    array_type       go to state 109


State 283

   70 array_type: ARRAY $@21 '[' $@22 index_type index_type_rept ']' . $@23 OF $@24 type

    $default  reduce using rule 68 ($@23)

    $@23  go to state 293


State 284

   74 index_type_rept: index_type_rept ',' . $@25 simple_type

    $default  reduce using rule 73 ($@25)

    $@25  go to state 294


State 285

  110 function_designator: ID $@35 '(' $@36 actual_parameter actual_parameter_list ')' .

    $default  reduce using rule 110 (function_designator)


State 286

  107 function_designator: BUILTIN_FUNCTION $@33 '(' $@34 actual_parameter actual_parameter_list ')' .

    $default  reduce using rule 107 (function_designator)


State 287

  133 case_label_rept: case_label_rept ',' $@42 case_label .

    $default  reduce using rule 133 (case_label_rept)


State 288

  175 for_list: expression TO . $@56 expression

    $default  reduce using rule 174 ($@56)

    $@56  go to state 295


State 289

  177 for_list: expression DOWNTO . $@57 expression

    $default  reduce using rule 176 ($@57)

    $@57  go to state 296


State 290

  173 for_stat: FOR $@52 ID $@53 ASSIGN $@54 for_list DO . $@55 statement

    $default  reduce using rule 172 ($@55)

    $@55  go to state 297


State 291

  113 actual_parameter_list: actual_parameter_list ',' $@37 . actual_parameter

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 241
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122
    actual_parameter     go to state 298


State 292

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list ')' $@14 ':' $@15 return_type . $@16 ';'

    $default  reduce using rule 42 ($@16)

    $@16  go to state 299


State 293

   70 array_type: ARRAY $@21 '[' $@22 index_type index_type_rept ']' $@23 . OF $@24 type

    OF  shift, and go to state 300


State 294

   74 index_type_rept: index_type_rept ',' $@25 . simple_type

    FLOAT  shift, and go to state 97
    INT    shift, and go to state 98
    ID     shift, and go to state 99
    TYPE   shift, and go to state 100
    '('    shift, and go to state 101

    simple_type      go to state 301
    scalar_type      go to state 104
    subrange_type    go to state 105
    const            go to state 106
    type_identifier  go to state 107


State 295

  175 for_list: expression TO $@56 . expression

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 302
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 296

  177 for_list: expression DOWNTO $@57 . expression

    LOGICALNOT        shift, and go to state 113
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 114
    BUILTIN_FUNCTION  shift, and go to state 115
    '('               shift, and go to state 116

    expression           go to state 303
    simple_expression    go to state 118
    term                 go to state 119
    factor               go to state 120
    variable             go to state 121
    entire_variable      go to state 68
    indexed_variable     go to state 69
    function_designator  go to state 122


State 297

  173 for_stat: FOR $@52 ID $@53 ASSIGN $@54 for_list DO $@55 . statement

    error             shift, and go to state 54
    IF                shift, and go to state 55
    CASE              shift, and go to state 56
    _BEGIN            shift, and go to state 57
    WHILE             shift, and go to state 58
    REPEAT            shift, and go to state 59
    FOR               shift, and go to state 60
    WITH              shift, and go to state 61
    FLOAT             shift, and go to state 62
    INT               shift, and go to state 63
    STRING            shift, and go to state 64
    ID                shift, and go to state 65
    BUILTIN_FUNCTION  shift, and go to state 66

    error  [reduce using rule 137 (statement)]
    ELSE   reduce using rule 137 (statement)
    END    reduce using rule 137 (statement)
    UNTIL  reduce using rule 137 (statement)
    ';'    reduce using rule 137 (statement)

    variable               go to state 67
    entire_variable        go to state 68
    indexed_variable       go to state 69
    if_statement           go to state 70
    case_statement         go to state 71
    statement              go to state 304
    assignment_statement   go to state 73
    structured_statement   go to state 74
    compound_statement     go to state 75
    conditional_statement  go to state 76
    reptive_statement      go to state 77
    while_stat             go to state 78
    rept_stat              go to state 79
    for_stat               go to state 80
    with_statement         go to state 81
    procedure_statement    go to state 82


State 298

  113 actual_parameter_list: actual_parameter_list ',' $@37 actual_parameter .

    $default  reduce using rule 113 (actual_parameter_list)


State 299

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list ')' $@14 ':' $@15 return_type $@16 . ';'

    ';'  shift, and go to state 305


State 300

   70 array_type: ARRAY $@21 '[' $@22 index_type index_type_rept ']' $@23 OF . $@24 type

    $default  reduce using rule 69 ($@24)

    $@24  go to state 306


State 301

   74 index_type_rept: index_type_rept ',' $@25 simple_type .

    $default  reduce using rule 74 (index_type_rept)


State 302

  175 for_list: expression TO $@56 expression .

    $default  reduce using rule 175 (for_list)


State 303

  177 for_list: expression DOWNTO $@57 expression .

    $default  reduce using rule 177 (for_list)


State 304

  173 for_stat: FOR $@52 ID $@53 ASSIGN $@54 for_list DO $@55 statement .

    $default  reduce using rule 173 (for_stat)


State 305

   43 function_header: FUNCTION ID $@12 '(' $@13 formal_parameter_section_list ')' $@14 ':' $@15 return_type $@16 ';' .

    $default  reduce using rule 43 (function_header)


State 306

   70 array_type: ARRAY $@21 '[' $@22 index_type index_type_rept ']' $@23 OF $@24 . type

    ARRAY  shift, and go to state 96
    FLOAT  shift, and go to state 97
    INT    shift, and go to state 98
    ID     shift, and go to state 99
    TYPE   shift, and go to state 100
    '('    shift, and go to state 101

    type             go to state 307
    simple_type      go to state 103
    scalar_type      go to state 104
    subrange_type    go to state 105
    const            go to state 106
    type_identifier  go to state 107
    structured_type  go to state 108
    array_type       go to state 109


State 307

   70 array_type: ARRAY $@21 '[' $@22 index_type index_type_rept ']' $@23 OF $@24 type .

    $default  reduce using rule 70 (array_type)
